; Generated by PTT
(define (domain n-puzzle-typed)
(:requirements :typing :equality)
(:types position tile - object
)
(:predicates (at ?tile - tile ?position - position)
(neighbor ?p1 - position ?p2 - position)
(empty ?position - position)
(stai_at ?tile - tile ?from - position)
(stag_at ?tile - tile ?from - position)
)
(:action move
:parameters ( ?tile - tile ?from - position ?to - position)
:precondition (and (neighbor ?from ?to)(at ?tile ?from)(empty ?to))
:effect (and (at ?tile ?to)(empty ?from)(not (at ?tile ?from))(not (empty ?to)))
)
(:action move_mcr_move_mcr_move_mcr_move_mcr_move_mcr_move_mcr_move_mcr_move
:parameters ( ?tile - tile ?from - position ?to - position ?tilex3 - tile ?fromx4 - position ?tilex5 - tile ?fromx6 - position ?tilex7 - tile ?fromx8 - position ?tilex9 - tile ?fromx10 - position)
:precondition (and (neighbor ?from ?to)(at ?tile ?from)(empty ?to)(neighbor ?fromx4 ?from)(at ?tilex3 ?fromx4)(neighbor ?fromx6 ?fromx4)(at ?tilex5 ?fromx6)(neighbor ?fromx8 ?fromx6)(at ?tilex7 ?fromx8)(neighbor ?fromx10 ?fromx8)(at ?tilex9 ?fromx10)(neighbor ?fromx4 ?fromx10)(neighbor ?from ?fromx4)(neighbor ?to ?from)(stag_at ?tile ?from)(not (= ?tile ?tilex3))(not (= ?from ?fromx4))(not (= ?tile ?tilex5))(not (= ?from ?fromx6))(not (= ?tile ?tilex7))(not (= ?from ?fromx8))(not (= ?tile ?tilex9))(not (= ?from ?fromx10))(not (= ?tilex3 ?tilex5))(not (= ?fromx4 ?fromx6))(not (= ?tilex3 ?tilex7))(not (= ?fromx4 ?fromx8))(not (= ?tilex3 ?tilex9))(not (= ?fromx4 ?fromx10))(not (= ?tilex5 ?tilex7))(not (= ?fromx6 ?fromx8))(not (= ?tilex5 ?tilex9))(not (= ?fromx6 ?fromx10))(not (= ?tilex7 ?tilex9))(not (= ?fromx8 ?fromx10)))
:effect (and (at ?tilex7 ?fromx6)(at ?tilex9 ?fromx8)(at ?tilex5 ?fromx10)(at ?tilex3 ?fromx4)(at ?tile ?from)(empty ?to)(not (at ?tilex5 ?fromx6))(not (at ?tilex7 ?fromx8))(not (empty ?fromx6))(not (at ?tilex9 ?fromx10))(not (empty ?fromx8))(not (at ?tilex5 ?fromx4))(not (empty ?fromx10))(not (at ?tilex3 ?from))(not (empty ?fromx4))(not (at ?tile ?to))(not (empty ?from)))
)
(:action move_mcr_move_mcr_move_mcr_move
:parameters ( ?tile - tile ?from - position ?to - position ?tilex3 - tile ?fromx4 - position ?tilex5 - tile ?fromx6 - position)
:precondition (and (neighbor ?from ?to)(at ?tile ?from)(empty ?to)(neighbor ?fromx4 ?from)(at ?tilex3 ?fromx4)(neighbor ?fromx6 ?fromx4)(at ?tilex5 ?fromx6)(neighbor ?to ?fromx6)(stag_at ?tile ?fromx6)(stai_at ?tile ?from)(not (= ?tile ?tilex3))(not (= ?from ?fromx4))(not (= ?tile ?tilex5))(not (= ?from ?fromx6))(not (= ?tilex3 ?tilex5))(not (= ?fromx4 ?fromx6)))
:effect (and (at ?tilex3 ?from)(at ?tilex5 ?fromx4)(at ?tile ?fromx6)(empty ?to)(not (at ?tile ?from))(not (at ?tilex3 ?fromx4))(not (empty ?from))(not (at ?tilex5 ?fromx6))(not (empty ?fromx4))(not (at ?tile ?to))(not (empty ?fromx6)))
)
(:action move_mcr_move_mcr_move_mcr_move_mcr_move_mcr_move
:parameters ( ?tile - tile ?from - position ?to - position ?tilex3 - tile ?fromx4 - position ?tilex5 - tile ?fromx6 - position ?tilex7 - tile ?fromx8 - position ?tilex9 - tile ?fromx10 - position)
:precondition (and (neighbor ?from ?to)(at ?tile ?from)(empty ?to)(neighbor ?fromx4 ?from)(at ?tilex3 ?fromx4)(neighbor ?fromx6 ?fromx4)(at ?tilex5 ?fromx6)(neighbor ?fromx8 ?fromx6)(at ?tilex7 ?fromx8)(neighbor ?fromx10 ?fromx8)(at ?tilex9 ?fromx10)(neighbor ?to ?fromx10)(stag_at ?tilex9 ?fromx8)(stag_at ?tile ?fromx10)(stai_at ?tile ?from)(not (= ?tile ?tilex3))(not (= ?from ?fromx4))(not (= ?tile ?tilex5))(not (= ?from ?fromx6))(not (= ?tile ?tilex7))(not (= ?from ?fromx8))(not (= ?tile ?tilex9))(not (= ?from ?fromx10))(not (= ?tilex3 ?tilex5))(not (= ?fromx4 ?fromx6))(not (= ?tilex3 ?tilex7))(not (= ?fromx4 ?fromx8))(not (= ?tilex3 ?tilex9))(not (= ?fromx4 ?fromx10))(not (= ?tilex5 ?tilex7))(not (= ?fromx6 ?fromx8))(not (= ?tilex5 ?tilex9))(not (= ?fromx6 ?fromx10))(not (= ?tilex7 ?tilex9))(not (= ?fromx8 ?fromx10)))
:effect (and (at ?tilex3 ?from)(at ?tilex5 ?fromx4)(at ?tilex7 ?fromx6)(at ?tilex9 ?fromx8)(at ?tile ?fromx10)(empty ?to)(not (at ?tile ?from))(not (at ?tilex3 ?fromx4))(not (empty ?from))(not (at ?tilex5 ?fromx6))(not (empty ?fromx4))(not (at ?tilex7 ?fromx8))(not (empty ?fromx6))(not (at ?tilex9 ?fromx10))(not (empty ?fromx8))(not (at ?tile ?to))(not (empty ?fromx10)))
)
)