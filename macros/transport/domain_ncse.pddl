; Generated by PTT
(define (domain transport)
(:requirements :typing :equality)
(:types location target locatable - object
 vehicle package - locatable
 capacity-number - object
)
(:predicates (road ?l1 - location ?l2 - location)
(at ?x - locatable ?v - location)
(in ?x - package ?v - vehicle)
(capacity ?v - vehicle ?s1 - capacity-number)
(capacity-predecessor ?s1 - capacity-number ?s2 - capacity-number)
(stai_at ?p - package ?l - location)
(stai_capacity ?v - vehicle ?s2 - capacity-number)
(stag_at ?p - package ?l2x8 - location)
)
(:functions (road-length ?l1 - location ?l2 - location)
(total-cost)
)
(:action drive
:parameters ( ?v - vehicle ?l1 - location ?l2 - location)
:precondition (and (at ?v ?l1)(road ?l1 ?l2))
:effect (and (not (at ?v ?l1))(at ?v ?l2)(increase (total-cost) 20))
)
(:action pick-up
:parameters ( ?v - vehicle ?l - location ?p - package ?s1 - capacity-number ?s2 - capacity-number)
:precondition (and (at ?v ?l)(at ?p ?l)(capacity-predecessor ?s1 ?s2)(capacity ?v ?s2))
:effect (and (not (at ?p ?l))(in ?p ?v)(capacity ?v ?s1)(not (capacity ?v ?s2))(increase (total-cost) 1))
)
(:action drop
:parameters ( ?v - vehicle ?l - location ?p - package ?s1 - capacity-number ?s2 - capacity-number)
:precondition (and (at ?v ?l)(in ?p ?v)(capacity-predecessor ?s1 ?s2)(capacity ?v ?s1))
:effect (and (not (in ?p ?v))(at ?p ?l)(capacity ?v ?s2)(not (capacity ?v ?s1))(increase (total-cost) 1))
)
(:action pick-up_mcr_drive_mcr_drive_mcr_drive_mcr_drive_mcr_drop
:parameters ( ?v - vehicle ?l - location ?p - package ?s1 - capacity-number ?s2 - capacity-number ?l2x5 - location ?l2x6 - location ?l2x7 - location ?l2x8 - location)
:precondition (and (at ?v ?l)(at ?p ?l)(capacity-predecessor ?s1 ?s2)(capacity ?v ?s2)(road ?l ?l2x5)(road ?l2x5 ?l2x6)(road ?l2x6 ?l2x7)(road ?l2x7 ?l2x8)(stai_at ?p ?l)(stai_capacity ?v ?s2)(stag_at ?p ?l2x8)(not (= ?v ?p)))
:effect (and (at ?v ?l2x8)(at ?p ?l2x8)(capacity ?v ?s2)(not (at ?p ?l))(not (at ?v ?l))(not (at ?v ?l2x5))(not (at ?v ?l2x6))(not (at ?v ?l2x7))(not (in ?p ?v))(not (capacity ?v ?s1))(increase (total-cost) 82))
)
(:action drop_mcr_drive_mcr_drive_mcr_drive_mcr_drive_mcr_pick-up
:parameters ( ?v - vehicle ?l - location ?p - package ?s1 - capacity-number ?s2 - capacity-number ?l2x5 - location ?l2x6 - location ?l2x7 - location ?l2x8 - location ?px9 - package)
:precondition (and (at ?v ?l)(in ?p ?v)(capacity-predecessor ?s1 ?s2)(capacity ?v ?s1)(road ?l ?l2x5)(road ?l2x5 ?l2x6)(road ?l2x6 ?l2x7)(road ?l2x7 ?l2x8)(at ?px9 ?l2x8)(stai_at ?px9 ?l2x8)(stag_at ?p ?l)(not (= ?v ?px9))(not (= ?l ?l2x8)))
:effect (and (at ?p ?l)(at ?v ?l2x8)(in ?px9 ?v)(capacity ?v ?s1)(not (in ?p ?v))(not (at ?v ?l))(not (at ?v ?l2x5))(not (at ?v ?l2x6))(not (at ?v ?l2x7))(not (at ?px9 ?l2x8))(not (capacity ?v ?s2))(increase (total-cost) 82))
)
)